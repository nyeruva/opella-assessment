# Deploying infrastructure to azure via terraform configuration files

name: Azure Infra Deployment to multiple environments using Terraform

#Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  # push:
  #   branches: ["master"]
  # pull_request:
  #   branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    # Declared environment variable to authenticate to Azure via GitHub Actions
    # Make sure you added your credentials

#Control deployment to environments based on environment varilable.
#env:
#  TARGET_ENVIRONMENT: "production" # Set to "Yes" to Deploy Infra to develeopment environment

jobs:
  Deploy_to_Development:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2 # I have used latest version of the terraform

      - name: Terraform Init
        run: terraform init

      - name: Create Terraform Workspace Dev
        run: terraform workspace new Dev || echo "Work Space is alredy created"
        continue-on-error: true

      - name: Select Dev Workspace
        run: terraform workspace select Dev

      - name: Terraform Plan
        run: terraform plan -out=tfplan --var-file dev.tfvars

      - name: Terraform Apply
        run: terraform apply tfplan

  Deploy_to_Production:
    runs-on: ubuntu-latest
    if: ${{ vars.TARGET_ENVIRONMENT == 'production' }} # Job only runs if TARGET_ENVIRONMENT is 'production'

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2 # I have used latest version of the terraform

      - name: Terraform Init
        run: terraform init

      - name: Create Terraform Workspace Prod
        run: terraform workspace new Prod || echo "Work Space is alredy created"
        continue-on-error: true

      - name: Select Prod Workspace
        run: terraform workspace select Prod

      - name: Terraform Plan
        run: terraform plan -out=tfplan --var-file prod.tfvars

      - name: Terraform Apply
        run: terraform apply tfplan
